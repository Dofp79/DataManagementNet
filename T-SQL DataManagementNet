/*
    ---------------------------------------------------------------
    Script: Contact Management Database Setup
    Description: 
        This SQL script creates a database named 'DataManagementNet' 
        and defines a table named 'RegisteredContacts' for storing 
        contact information including name, phone number, and email address.
        
        It also creates a set of stored procedures to:
        - Show the entire contact list
        - Register a new contact
        - Retrieve contact details by ID
        - Edit an existing contact
        - Delete a contact by ID

    Target Platform: SQL Server Management Studio 2019
    Author: [Your Name]
    ---------------------------------------------------------------
*/

-- Create the database
CREATE DATABASE DataManagementNet;

-- Set the database context to DataManagementNet
USE DataManagementNet;

-- Create the RegisteredContacts table
CREATE TABLE RegisteredContacts(
    CID int identity PRIMARY KEY, -- Auto-incrementing identity column and primary key
    ContactsName varchar(50) UNIQUE, -- Contact's name, must be unique
    Phone varchar(50), -- Contact's phone number
    Email varchar(50) -- Contact's email address
);

-- Set the context again (good practice when running scripts)
USE [DataManagementNet]
GO

-- Stored Procedure: Retrieve all contacts
CREATE PROCEDURE sp_ShowContactList
AS
BEGIN
    SELECT * FROM RegisteredContacts; -- Retrieve all contact records
END;

-- Set context before creating next procedure
USE [DataManagementNet]
GO

-- Stored Procedure: Register a new contact
CREATE PROCEDURE sp_Registration
    @ContactsName varchar(50),
    @Phone varchar(50),
    @Email varchar(50)
AS
BEGIN
    INSERT INTO RegisteredContacts (ContactsName, Phone, Email)
    VALUES (@ContactsName, @Phone, @Email); -- Insert new contact into table
END;

-- Set context before creating next procedure
USE [DataManagementNet]
GO

-- Stored Procedure: Get contact details by ID
CREATE PROCEDURE sp_GetContact(
    @CID int
)
AS
BEGIN
    SELECT * FROM RegisteredContacts WHERE CID = @CID; -- Retrieve specific contact by ID
END;

-- Set context before creating next procedure
USE [DataManagementNet]
GO

-- Stored Procedure: Delete a contact by ID
CREATE PROCEDURE sp_DeleteContat( -- Note: Typo in procedure name ("Contat" instead of "Contact")
    @CID int
)
AS
BEGIN
    DELETE FROM RegisteredContacts WHERE CID = @CID; -- Delete contact by ID
END;

-- Set context before creating next procedure
USE [DataManagementNet]
GO

-- Stored Procedure: Edit an existing contact
CREATE PROCEDURE sp_EditContact
    @CID int,
    @ContactsName varchar(50),
    @Phone varchar(50),
    @Email varchar(50)
AS
BEGIN
    UPDATE RegisteredContacts 
    SET ContactsName = @ContactsName, Phone = @Phone, Email = @Email 
    WHERE CID = @CID; -- Update contact info based on ID
END;
